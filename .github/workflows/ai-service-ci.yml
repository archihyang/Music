name: AI Service CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'ai-models/**'
      - '.github/workflows/ai-service-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'ai-models/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: genesis_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: ai-models/requirements.txt
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libsndfile1
    
    - name: Install Python dependencies
      working-directory: ./ai-models
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio black pylint mypy
    
    - name: Run Black formatting check
      working-directory: ./ai-models
      run: black --check src/ || true
    
    - name: Run Pylint
      working-directory: ./ai-models
      run: pylint src/ --fail-under=7.0 || true
    
    - name: Run MyPy type checking
      working-directory: ./ai-models
      run: mypy src/ --ignore-missing-imports || true
    
    - name: Run tests with coverage
      working-directory: ./ai-models
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/genesis_test
        REDIS_URL: redis://localhost:6379
        PYTHONPATH: ${{ github.workspace }}/ai-models
      run: |
        pytest tests/ --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        directory: ./ai-models
        flags: ai-service
        name: ai-service-coverage

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: false  # Temporarily disabled until Dockerfile is ready
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      working-directory: ./ai-models
      run: |
        docker build -t genesis-ai-service:test .
    
    - name: Run Docker container test
      run: |
        docker run --rm genesis-ai-service:test python -c "import src.main; print('AI Service container OK')"